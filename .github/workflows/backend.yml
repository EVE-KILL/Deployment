name: Backend - Build and Deploy

on:
  push:
    branches:
      - main
    paths:
      - 'backend/**'
  repository_dispatch:
    types: [update-backend]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: eve-kill/backend

jobs:
  update-backend-submodule:
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: Log Payload
        run: |
          echo "Received Payload:"
          echo "================="
          echo "Submodule: ${{ github.event.client_payload.submodule }}"
          echo "Environment: ${{ github.event.client_payload.environment }}"
          echo "Commit: ${{ github.event.client_payload.commit }}"

      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0
          ref: main

      - name: Identify the submodule to update
        id: submodule
        run: |
          echo "SUBMODULE=${{ github.event.client_payload.submodule }}" >> $GITHUB_ENV
          echo "COMMIT=${{ github.event.client_payload.commit }}" >> $GITHUB_ENV
          echo "TARGET_BRANCH=main" >> $GITHUB_ENV

      - name: Update submodule
        run: |
          # Checkout the target branch
          git checkout ${TARGET_BRANCH}
          # Setup the configuration for the git user
          git config --global user.name "GitHub Actions"
          git config --global user.email "noreply@eve-kill.com"
          # Update the submodule
          git submodule update --remote -- ${SUBMODULE}
          # Enter the submodule
          cd ${SUBMODULE}
          # Checkout submodule to commit hash
          git checkout ${COMMIT}
          cd -
          # Add the submodule changes
          git add ${SUBMODULE}
          # Commit the submodule changes
          git commit -m "Updated ${SUBMODULE} submodule to commit ${COMMIT} on branch ${TARGET_BRANCH}"
          # Push the submodule changes
          git push origin ${TARGET_BRANCH}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-backend-container:
    runs-on: ubuntu-latest
    needs: update-backend-submodule
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0
          ref: main

      - name: Get submodule commit hash
        id: short_commit
        run: |
          cd backend
          SUBMODULE_COMMIT_HASH=$(git rev-parse --short HEAD)
          echo "::set-output name=hash::$SUBMODULE_COMMIT_HASH"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@aa33708b10e362ff993539393ff100fa93ed6a27 # v3.5.0

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.REPO_ACCESS_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5.5.1
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            latest
            ${{ steps.short_commit.outputs.hash }}

      - name: Copy the docker folder into the build context
        run: cp -r docker/ backend/.docker

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@5176d81f87c23d6fc96624dfdbcd9f3830bbe445 # v6.5.0
        with:
          file: docker/backend.Dockerfile
          context: backend/
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          #platforms: linux/amd64,linux/arm64
          platforms: linux/amd64
          cache-from: type=gha,scope=backend
          cache-to: type=gha,mode=max,scope=backend

  deploy-backend:
    runs-on: ubuntu-latest
    needs: build-backend-container
    environment: production
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get short commit hash
        id: short_commit
        run: |
          cd frontend
          SUBMODULE_COMMIT_HASH=$(git rev-parse --short HEAD)
          echo "::set-output name=hash::$SUBMODULE_COMMIT_HASH"

      - name: Tailscale
        uses: tailscale/github-action@v2
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: tag:ci

      - name: Set up kubectl
        run: |
          tailscale configure kubeconfig tailscale-operator

      - name: Deploy
        run: |
          kubectl --kubeconfig=$HOME/.kube/config -n eve-kill rollout restart deployment/backend
          kubectl --kubeconfig=$HOME/.kube/config -n eve-kill rollout restart deployment/redisq
          kubectl --kubeconfig=$HOME/.kube/config -n eve-kill rollout restart deployment/process-entities
          kubectl --kubeconfig=$HOME/.kube/config -n eve-kill rollout restart deployment/process-wars
          kubectl --kubeconfig=$HOME/.kube/config -n eve-kill rollout restart deployment/cron

      - name: Wait for rollout to finish
        run: |
          kubectl --kubeconfig=$HOME/.kube/config -n eve-kill rollout status deployment/backend
          kubectl --kubeconfig=$HOME/.kube/config -n eve-kill rollout status deployment/redisq
          kubectl --kubeconfig=$HOME/.kube/config -n eve-kill rollout status deployment/process-entities
          kubectl --kubeconfig=$HOME/.kube/config -n eve-kill rollout status deployment/process-wars
          kubectl --kubeconfig=$HOME/.kube/config -n eve-kill rollout status deployment/cron

      - name: Remove kubeconfig
        run: rm -f $HOME/.kube/config
