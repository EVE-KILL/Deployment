name: Helm-Deploy

on:
  push:
    branches:
      - main
    paths:
      - 'helm-chart/**'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: eve-kill/killboard

jobs:
  deploy-killboard:
    runs-on: ubuntu-latest
    environment: production
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Tailscale
        uses: tailscale/github-action@v2
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: tag:ci

      - name: Set up kubectl
        run: |
          tailscale configure kubeconfig tailscale-operator

      - name: Validate kubeconfig
        run: |
          kubectl --kubeconfig=$HOME/.kube/config get po -A

      - name: Helm Deploy
        uses: vimeda/helm@v1.7.0
        with:
          release: evekill
          namespace: evekill
          chart: helm-chart/
          token: '${{ github.token }}'
          values: |
            ws_token: ${{ secrets.WS_TOKEN }}
            ollama:
              token: ${{ secrets.OLLAMA_TOKEN }}
            rabbitmq:
              queuePassword: ${{ secrets.RABBITMQ_QUEUE_PASSWORD }}
            config:
              sso:
                prod:
                  client_id: ${{ secrets.SSO_PROD_CLIENT_ID }}
                  client_secret: ${{ secrets.SSO_PROD_CLIENT_SECRET }}
                  callback_url: ${{ secrets.SSO_PROD_CALLBACK_URL }}
              webhooks:
                comments: ${{ secrets.WEBHOOKS_COMMENTS }}
                esi_errors: ${{ secrets.WEBHOOKS_ESI_ERRORS }}
                errors: ${{ secrets.WEBHOOKS_ERRORS }}
                new_characters_found: ${{ secrets.WEBHOOKS_NEW_CHARACTERS_FOUND }}
          value-files: "helm-chart/values.yaml"
        env:
          KUBECONFIG_FILE: '$HOME/.kube/config'

      - name: Remove kubeconfig
        run: rm -f $HOME/.kube/config
